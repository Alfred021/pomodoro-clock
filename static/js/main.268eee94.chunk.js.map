{"version":3,"sources":["components/pomodoro.js","components/App.js","reportWebVitals.js","index.js"],"names":["Session","props","increment","decrement","length","class","id","onClick","Timer","time","mode","min","Math","floor","sec","toString","Break","App","audioRef","useRef","useState","breakLength","setBreakLength","sessionLength","setSessionLength","setMode","timeLeft","setTimeLeft","isActive","setIsActive","timeSpend","setTimeSpend","AudioPlaying","setAudioPlaying","useEffect","interval","setInterval","clearInterval","current","play","currentRef","addEventListener","pause","currentTime","src","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.268eee94.chunk.js","sourcesContent":["export const Session = (props) => {\r\n    const {increment, decrement, length} = props\r\n  \r\n  return (\r\n    <div class=\"col-sm-6\">\r\n      <p id=\"session-label\">Session Length</p>\r\n      <button class=\"btn btn-info btn-lg\" id=\"session-decrement\" onClick={decrement}>-</button>\r\n      <span class=\"align-middle\" id=\"session-length\">{length / 60}</span>\r\n      <button class=\"btn btn-danger btn-lg\" \r\n      onClick={increment} id=\"session-increment\">+</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Timer = (props) => {\r\n    const {time, mode} = props\r\n    const min = Math.floor(time / 1000 / 60)\r\n    const sec = Math.floor((time / 1000) % 60)\r\n    \r\n  return (  \r\n    <div id=\"timer\">\r\n      <p id=\"timer-label\">{mode}</p>\r\n      <p id=\"time-left\">\r\n        {min.toString().length === 1 ? \"0\" + min : min}:{sec.toString().length === 1 ? \"0\" + sec : sec}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Break = (props) => {\r\n    const {increment, decrement, length} = props\r\n    \r\n    return (\r\n      <div class=\"col-sm-6\">\r\n        <p id=\"break-label\">Break Length</p>\r\n        <button id=\"break-decrement\" class=\"btn btn-info btn-lg\" onClick={decrement}>-</button>\r\n        <span class=\"align-middle\" id=\"break-length\">{length / 60}</span>\r\n        <button class=\"btn btn-danger btn-lg\" \r\n        onClick={increment} id=\"break-increment\">+</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { Timer, Session, Break } from './pomodoro.js';\r\nimport '../css/App.css';\r\n\r\nconst App = () => {\r\n  const audioRef = useRef();\r\n  const [breakLength, setBreakLength] = useState(5 * 60);\r\n  const [sessionLength, setSessionLength] = useState(25 * 60);\r\n  const [mode, setMode] = useState(\"session\");\r\n  const [timeLeft, setTimeLeft] = useState(sessionLength * 1000);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [timeSpend, setTimeSpend] = useState(0);\r\n  const [AudioPlaying, setAudioPlaying] = useState(false);\r\n\r\n    const decrementBreakLength = () => {\r\n  const decreasedBreakLength = breakLength - 60 > 60 ? breakLength - 60 : 60;\r\n setBreakLength(decreasedBreakLength)\r\n}\r\n\r\nconst incrementBreakLength = () => {\r\n  const incrementedBreakLength = \r\n        breakLength + 60 <= 60 * 60 ? breakLength + 60 : 60 * 60;\r\n  setBreakLength(incrementedBreakLength)\r\n}\r\n\r\n  const decrementSessionLength = () => {\r\n  const decreasedSessionLength = sessionLength - 60 > 60 ? sessionLength - 60 : 60;\r\n setSessionLength(decreasedSessionLength)\r\n}\r\n\r\nconst incrementSessionLength = () => {\r\n  const incrementedSessionLength = \r\n        sessionLength + 60 <= 60 * 60 ? sessionLength + 60 : 60 * 60;\r\n  setSessionLength(incrementedSessionLength)\r\n}\r\n\r\nconst reset = () => {\r\n  setBreakLength(5 * 60)\r\n  setSessionLength(25 * 60)\r\n  setMode(\"session\")\r\n  setTimeLeft(sessionLength * 1000);\r\n  \r\n if (isActive) {\r\n   setIsActive(false)\r\n   setTimeSpend(0)\r\n }\r\n  \r\n    audioRef.current.pause();\r\n    audioRef.current.currentTime = 0;\r\n    if (AudioPlaying) {\r\n      setAudioPlaying(false)\r\n    }   \r\n}\r\n\r\nconst toggleActive = () => {\r\n  setIsActive(!isActive);\r\n}\r\n\r\nuseEffect(() => {\r\n  setTimeLeft(mode === \"session\" ? sessionLength * 1000 : breakLength * 1000)\r\n}, [sessionLength, breakLength])\r\n\r\nuseEffect(() => {\r\n    let interval = null;\r\n    if (isActive && timeLeft > 1) {\r\n      setTimeLeft(mode === \"session\" \r\n      ? sessionLength * 1000 - timeSpend\r\n      : breakLength * 1000 - timeSpend)\r\n    \r\n    interval = setInterval(() => {\r\n      setTimeSpend((timeSpend) => timeSpend + 1000)\r\n    }, 1000)\r\n  } else {\r\n    clearInterval(interval)\r\n  }\r\n  \r\n  if (timeLeft === 0) {\r\n    audioRef.current.play();\r\n    setAudioPlaying(true);\r\n    setTimeSpend(0);\r\n    setMode((mode) => (mode === \"session\" ? \"break\" : \"session\"))\r\n    setTimeLeft(mode === \"session\" ? sessionLength * 1000 : breakLength * 1000);\r\n  }\r\n  return () => clearInterval(interval);\r\n}, [isActive, timeSpend]);\r\n\r\nuseEffect(() => {\r\n  let currentRef = audioRef.current\r\n  audioRef.current.addEventListener(\"ended\", () => setAudioPlaying(false));\r\n  return () => {\r\n    currentRef.addEventListener(\"ended\", () => setAudioPlaying(false));\r\n  }\r\n}, [audioRef]);\r\n\r\nreturn (\r\n  <> \r\n  <div class=\"container-fluid text-center\">\r\n    <h1>Pomodoro Clock</h1>\r\n    <div class=\"row\">\r\n      <Break\r\n        decrement={decrementBreakLength}\r\n        increment={incrementBreakLength}\r\n        length={breakLength}\r\n       />\r\n      <Session\r\n        decrement={decrementSessionLength}\r\n        increment={incrementSessionLength}\r\n        length={sessionLength}\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"container-fluid text-center\">\r\n    <Timer time={timeLeft} mode={mode}/>   \r\n     <div class=\"btn-group\">\r\n      <button class=\"btn btn-success btn-lg\" onClick={toggleActive} id=\"start_stop\">{isActive ? \"Pause\" : \"Start\"}</button>\r\n      <button class=\"btn btn-warning btn-lg\" onClick={reset} id=\"reset\">Reset</button>\r\n    </div>\r\n  </div>\r\n    <audio id=\"beep\" src=\"https://freesound.org/data/previews/523/523960_350703-lq.mp3\" ref={audioRef}/>    \r\n  </>\r\n)\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}